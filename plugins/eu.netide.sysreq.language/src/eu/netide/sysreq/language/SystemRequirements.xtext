// automatically generated by Xtext
grammar eu.netide.sysreq.language.SystemRequirements with org.eclipse.xtext.common.Terminals

import "platform:/resource/eu.netide.sysreq/model/sysreq.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

SystemRequirements returns SystemRequirements:
	'hardware' hardware=Hardware
	'software' software=Software
	'network' network=Network;

Hardware returns Hardware:
	{Hardware}
	'{'
	('arch' ':' '[' arch+=EString ("," arch+=EString)* ']')?
	('cpucores' ':' cpucores=EInt)?
	('cpufreq' ':' cpufreq=EInt)?
	('memory' ':' memory=EInt)?
	'}';

Software returns Software:
	{Software}
	'{'
	('controllers' '[' controllers+=Controller ("," controllers+=Controller)* ']')?
	('programminglanguages' '[' programminglanguages+=ProgrammingLanguage ("," programminglanguages+=ProgrammingLanguage)*
	']')?
	('libraries' '[' libraries+=Library ("," libraries+=Library)* ']')?
	'}';

Network returns Network:
	{Network}
	'{'
	('switchtype' ':' '[' switchtype+=EString ("," switchtype+=EString)* ']')?
	('of_version' ':' '[' of_version+=EString ("," of_version+=EString)* ']')?
	('topologyrequirements' ':' topologyrequirements=EString)?
	'}';

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

Controller returns Controller:
	{Controller}
	'Controller'
	name=EString
	'{'
	('version' ':' version=EString)?
	('programminglanguages' '[' programminglanguages+=[ProgrammingLanguage|EString] ("," programminglanguages+=[ProgrammingLanguage|EString])* ']')?
	'}';

ProgrammingLanguage returns ProgrammingLanguage:
	{ProgrammingLanguage}
	'ProgrammingLanguage'
	name=EString
	'{'
	('version' ':' version=EString)?
	'}';

Library returns Library:
	'Library'
	name=EString
	'{'
	('version' ':' version=EString)?
	'programminglanguage' programminglanguage=[ProgrammingLanguage|EString]
	'}';


