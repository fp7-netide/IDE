// automatically generated by Xtext
grammar eu.netide.parameters.language.NetIDEParameters with org.eclipse.xtext.common.Terminals

import "platform:/resource/eu.netide.parameters/parameters.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore



ParameterSpecification returns ParameterSpecification:
	{ParameterSpecification}
	'types' '{'
		(types+=Type ("," types+=Type)*)?
	'}' 
	'parameters' '{'
		(parameters+=Parameter ("," parameters+=Parameter)*)?
	'}';

Parameter:
	name=ID ':' type=[Type];



Type:
	BasicType | CompositeType;

BasicType returns BasicType:
	{BasicType}
	'basic' name=ID ':' atomictype=AtomicType
	('[' constraints+=Constraint (',' constraints+=Constraint)* ']')?;

CompositeType returns CompositeType:
	{CompositeType}
	'composite' name=ID
	'{'
		innertypes+=[Type] ("," innertypes+=[Type])*
	'}';

EString returns ecore::EString:
	STRING | ID;

Constraint returns Constraint:
	{Constraint}
	EString;
	
AtomicType returns AtomicType:
	"String" | "Integer" | "Boolean" | "Float"
;

